/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IAssetStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetStore__factory>;
    getContractFactory(
      name: "IAssetStoreEx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetStoreEx__factory>;
    getContractFactory(
      name: "IAssetStoreRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetStoreRegistry__factory>;
    getContractFactory(
      name: "IStringValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStringValidator__factory>;
    getContractFactory(
      name: "AssetComposer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetComposer__factory>;
    getContractFactory(
      name: "AssetComposerAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetComposerAdmin__factory>;
    getContractFactory(
      name: "AssetComposerCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetComposerCore__factory>;
    getContractFactory(
      name: "AssetProviderRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetProviderRegistry__factory>;
    getContractFactory(
      name: "AppStoreRegistory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppStoreRegistory__factory>;
    getContractFactory(
      name: "AssetStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetStore__factory>;
    getContractFactory(
      name: "AssetStoreAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetStoreAdmin__factory>;
    getContractFactory(
      name: "AssetStoreCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetStoreCore__factory>;
    getContractFactory(
      name: "AssetStoreProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetStoreProvider__factory>;
    getContractFactory(
      name: "EmojiFlagToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmojiFlagToken__factory>;
    getContractFactory(
      name: "IProxyRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProxyRegistry__factory>;
    getContractFactory(
      name: "IAssetComposer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetComposer__factory>;
    getContractFactory(
      name: "IAssetProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetProvider__factory>;
    getContractFactory(
      name: "ICategorizedAssetProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICategorizedAssetProvider__factory>;
    getContractFactory(
      name: "IAssetProviderRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetProviderRegistry__factory>;
    getContractFactory(
      name: "IAssetStoreToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetStoreToken__factory>;
    getContractFactory(
      name: "INounsDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INounsDescriptor__factory>;
    getContractFactory(
      name: "INounsSeeder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INounsSeeder__factory>;
    getContractFactory(
      name: "IPathDecoder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPathDecoder__factory>;
    getContractFactory(
      name: "ISVGHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISVGHelper__factory>;
    getContractFactory(
      name: "KamonToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KamonToken__factory>;
    getContractFactory(
      name: "Benchmark",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Benchmark__factory>;
    getContractFactory(
      name: "StringValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StringValidator__factory>;
    getContractFactory(
      name: "SVGHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SVGHelper__factory>;
    getContractFactory(
      name: "SVGPathDecoder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SVGPathDecoder__factory>;
    getContractFactory(
      name: "SVGPathDecoder2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SVGPathDecoder2__factory>;
    getContractFactory(
      name: "SVGPathDecoder3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SVGPathDecoder3__factory>;
    getContractFactory(
      name: "SVGPathDecoder4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SVGPathDecoder4__factory>;
    getContractFactory(
      name: "SVGPathDecoderA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SVGPathDecoderA__factory>;
    getContractFactory(
      name: "MaterialToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MaterialToken__factory>;
    getContractFactory(
      name: "NounsAssetProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NounsAssetProvider__factory>;
    getContractFactory(
      name: "OnChainCanvas",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnChainCanvas__factory>;
    getContractFactory(
      name: "OnChainCanvasAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnChainCanvasAdmin__factory>;
    getContractFactory(
      name: "OnChainCanvasCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnChainCanvasCore__factory>;
    getContractFactory(
      name: "IAssetStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetStore__factory>;
    getContractFactory(
      name: "IAssetStoreEx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetStoreEx__factory>;
    getContractFactory(
      name: "IAssetStoreRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetStoreRegistry__factory>;
    getContractFactory(
      name: "IStringValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStringValidator__factory>;
    getContractFactory(
      name: "SplatterArtProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SplatterArtProvider__factory>;
    getContractFactory(
      name: "SplatterProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SplatterProvider__factory>;
    getContractFactory(
      name: "SplatterToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SplatterToken__factory>;
    getContractFactory(
      name: "ERC721AIERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AIERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__factory>;
    getContractFactory(
      name: "IERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721A__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IAssetStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetStore>;
    getContractAt(
      name: "IAssetStoreEx",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetStoreEx>;
    getContractAt(
      name: "IAssetStoreRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetStoreRegistry>;
    getContractAt(
      name: "IStringValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStringValidator>;
    getContractAt(
      name: "AssetComposer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetComposer>;
    getContractAt(
      name: "AssetComposerAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetComposerAdmin>;
    getContractAt(
      name: "AssetComposerCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetComposerCore>;
    getContractAt(
      name: "AssetProviderRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetProviderRegistry>;
    getContractAt(
      name: "AppStoreRegistory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AppStoreRegistory>;
    getContractAt(
      name: "AssetStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetStore>;
    getContractAt(
      name: "AssetStoreAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetStoreAdmin>;
    getContractAt(
      name: "AssetStoreCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetStoreCore>;
    getContractAt(
      name: "AssetStoreProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetStoreProvider>;
    getContractAt(
      name: "EmojiFlagToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EmojiFlagToken>;
    getContractAt(
      name: "IProxyRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProxyRegistry>;
    getContractAt(
      name: "IAssetComposer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetComposer>;
    getContractAt(
      name: "IAssetProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetProvider>;
    getContractAt(
      name: "ICategorizedAssetProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICategorizedAssetProvider>;
    getContractAt(
      name: "IAssetProviderRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetProviderRegistry>;
    getContractAt(
      name: "IAssetStoreToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetStoreToken>;
    getContractAt(
      name: "INounsDescriptor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INounsDescriptor>;
    getContractAt(
      name: "INounsSeeder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INounsSeeder>;
    getContractAt(
      name: "IPathDecoder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPathDecoder>;
    getContractAt(
      name: "ISVGHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISVGHelper>;
    getContractAt(
      name: "KamonToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KamonToken>;
    getContractAt(
      name: "Benchmark",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Benchmark>;
    getContractAt(
      name: "StringValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StringValidator>;
    getContractAt(
      name: "SVGHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SVGHelper>;
    getContractAt(
      name: "SVGPathDecoder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SVGPathDecoder>;
    getContractAt(
      name: "SVGPathDecoder2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SVGPathDecoder2>;
    getContractAt(
      name: "SVGPathDecoder3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SVGPathDecoder3>;
    getContractAt(
      name: "SVGPathDecoder4",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SVGPathDecoder4>;
    getContractAt(
      name: "SVGPathDecoderA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SVGPathDecoderA>;
    getContractAt(
      name: "MaterialToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MaterialToken>;
    getContractAt(
      name: "NounsAssetProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NounsAssetProvider>;
    getContractAt(
      name: "OnChainCanvas",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnChainCanvas>;
    getContractAt(
      name: "OnChainCanvasAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnChainCanvasAdmin>;
    getContractAt(
      name: "OnChainCanvasCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnChainCanvasCore>;
    getContractAt(
      name: "IAssetStore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetStore>;
    getContractAt(
      name: "IAssetStoreEx",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetStoreEx>;
    getContractAt(
      name: "IAssetStoreRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetStoreRegistry>;
    getContractAt(
      name: "IStringValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStringValidator>;
    getContractAt(
      name: "SplatterArtProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SplatterArtProvider>;
    getContractAt(
      name: "SplatterProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SplatterProvider>;
    getContractAt(
      name: "SplatterToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SplatterToken>;
    getContractAt(
      name: "ERC721AIERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AIERC721Receiver>;
    getContractAt(
      name: "ERC721A",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A>;
    getContractAt(
      name: "IERC721A",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721A>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
