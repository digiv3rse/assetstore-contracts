/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StringValidator,
  StringValidatorInterface,
} from "../StringValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_str",
        type: "string",
      },
    ],
    name: "sanitizeJason",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "str",
        type: "bytes",
      },
    ],
    name: "validate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610668806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063841b9d971461003b578063c16e50ef14610064575b600080fd5b61004e6100493660046104c8565b610087565b60405161005b919061057a565b60405180910390f35b6100776100723660046104c8565b61015c565b604051901515815260200161005b565b6060818160005b82518110156101545760008382815181106100ab576100ab610606565b0160209081015160f81c91508110610141578060ff16605c14806100d257508060ff166022145b1561011c5760405161010a9084907f5c0000000000000000000000000000000000000000000000000000000000000090602001610519565b60405160208183030381529060405292505b828160405160200161012f929190610548565b60405160208183030381529060405292505b508061014c816105dd565b91505061008e565b509392505050565b6000805b825181101561044957600083828151811061017d5761017d610606565b01602001516001600160f81b03191690507f300000000000000000000000000000000000000000000000000000000000000081108015906101e857507f39000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821611155b8061025257507f41000000000000000000000000000000000000000000000000000000000000006001600160f81b031982161080159061025257507f5a000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821611155b806102bc57507f61000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216108015906102bc57507f7a000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821611155b806102f057507f20000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216145b8061032457507f23000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216145b8061035857507f28000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216145b8061038c57507f29000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216145b806103c057507f2c000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216145b806103f457507f2d000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216145b8061042857507f2e000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216145b610436575060009392505050565b5080610441816105dd565b915050610160565b50600192915050565b600067ffffffffffffffff8084111561046d5761046d61061c565b604051601f8501601f19908116603f011681019082821181831017156104955761049561061c565b816040528093508581528686860111156104ae57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156104da57600080fd5b813567ffffffffffffffff8111156104f157600080fd5b8201601f8101841361050257600080fd5b61051184823560208401610452565b949350505050565b6000835161052b8184602088016105ad565b6001600160f81b0319939093169190920190815260010192915050565b6000835161055a8184602088016105ad565b60f89390931b6001600160f81b0319169190920190815260010192915050565b60208152600082518060208401526105998160408501602087016105ad565b601f01601f19169190910160400192915050565b60005b838110156105c85781810151838201526020016105b0565b838111156105d7576000848401525b50505050565b60006000198214156105ff57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209a8c356ad359986aaf9ee97d64154bbdf3e632fd1450b0f4a659894b7768091064736f6c63430008060033";

export class StringValidator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StringValidator> {
    return super.deploy(overrides || {}) as Promise<StringValidator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StringValidator {
    return super.attach(address) as StringValidator;
  }
  connect(signer: Signer): StringValidator__factory {
    return super.connect(signer) as StringValidator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StringValidatorInterface {
    return new utils.Interface(_abi) as StringValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StringValidator {
    return new Contract(address, _abi, signerOrProvider) as StringValidator;
  }
}
