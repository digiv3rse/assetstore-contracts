/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SVGPathDecoder2,
  SVGPathDecoder2Interface,
} from "../SVGPathDecoder2";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "body",
        type: "bytes",
      },
    ],
    name: "decodePath",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610812806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c25ddce014610030575b600080fd5b61004361003e36600461048a565b610059565b604051610050919061064c565b60405180910390f35b6060600060038351600261006d91906106cd565b6100779190610697565b90506060600a5b8261008982806106cd565b10156100a15761009a60028261067f565b905061007e565b60008080808080805b8987101561047a5760608a6100bf8a8a61067f565b106100ca578a6100d4565b6100d4898961067f565b92508796505b82871015610442576100ed600288610697565b6100f89060036106cd565b935061010560028861074e565b61015c578c848151811061011b5761011b6107b0565b016020015160f81c955060108d61013386600161067f565b81518110610143576101436107b0565b0160200151610155919060f81c610762565b94506101b5565b8c61016885600261067f565b81518110610178576101786107b0565b016020015160f81c955060108d61019086600161067f565b815181106101a0576101a06107b0565b01602001516101b2919060f81c6106ab565b94505b60ff85166102225760418660ff16101580156101d55750605a8660ff1611155b806101f3575060618660ff16101580156101f35750607a8660ff1611155b1561021d57808660405160200161020b929190610602565b60405160208183030381529060405290505b610430565b60006101008760ff168760ff1661010061023c91906106cd565b610246919061067f565b61025091906106ec565b9050610400811061026e57610267610400826106ec565b90506102a0565b8160405160200161027f91906105c1565b60408051601f19818403018152919052915061029d816104006106ec565b90505b60648110156102c557600a81106102b85760026102bb565b60015b60ff1692506102de565b6103e881106102d55760046102d8565b60035b60ff1692505b60008367ffffffffffffffff8111156102f9576102f96107c6565b6040519080825280601f01601f191660200182016040528015610323576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061035a5761035a6107b0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b81156104095761039b6001856106ec565b93506103a8600a8361074e565b6103b390603061067f565b60f81b8185815181106103c8576103c86107b0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610402600a83610697565b915061038a565b828160405160200161041c92919061056a565b604051602081830303815290604052925050505b8661043a81610733565b9750506100da565b898160405160200161045592919061053b565b6040516020818303038152906040529950508787610473919061067f565b96506100aa565b50969a9950505050505050505050565b60006020828403121561049c57600080fd5b813567ffffffffffffffff808211156104b457600080fd5b818401915084601f8301126104c857600080fd5b8135818111156104da576104da6107c6565b604051601f8201601f19908116603f01168101908382118183101715610502576105026107c6565b8160405282815287602084870101111561051b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000835161054d818460208801610703565b835190830190610561818360208801610703565b01949350505050565b6000835161057c818460208801610703565b835190830190610590818360208801610703565b7f20000000000000000000000000000000000000000000000000000000000000009101908152600101949350505050565b600082516105d3818460208701610703565b7f2d00000000000000000000000000000000000000000000000000000000000000920191825250600101919050565b60008351610614818460208801610703565b60f89390931b7fff00000000000000000000000000000000000000000000000000000000000000169190920190815260010192915050565b602081526000825180602084015261066b816040850160208701610703565b601f01601f19169190910160400192915050565b6000821982111561069257610692610784565b500190565b6000826106a6576106a661079a565b500490565b600060ff8316806106be576106be61079a565b8060ff84160491505092915050565b60008160001904831182151516156106e7576106e7610784565b500290565b6000828210156106fe576106fe610784565b500390565b60005b8381101561071e578181015183820152602001610706565b8381111561072d576000848401525b50505050565b600060001982141561074757610747610784565b5060010190565b60008261075d5761075d61079a565b500690565b600060ff8316806107755761077561079a565b8060ff84160691505092915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220df5c1734ac0265f80ad4d9c9a348349cb276119839a4e28e5c21aace82fb0de064736f6c63430008060033";

export class SVGPathDecoder2__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SVGPathDecoder2> {
    return super.deploy(overrides || {}) as Promise<SVGPathDecoder2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SVGPathDecoder2 {
    return super.attach(address) as SVGPathDecoder2;
  }
  connect(signer: Signer): SVGPathDecoder2__factory {
    return super.connect(signer) as SVGPathDecoder2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SVGPathDecoder2Interface {
    return new utils.Interface(_abi) as SVGPathDecoder2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SVGPathDecoder2 {
    return new Contract(address, _abi, signerOrProvider) as SVGPathDecoder2;
  }
}
