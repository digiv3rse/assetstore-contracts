/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IAssetComposer,
  IAssetComposerInterface,
} from "../IAssetComposer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compositionId",
        type: "uint256",
      },
    ],
    name: "CompositionRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "assetId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "provider",
            type: "string",
          },
          {
            internalType: "string",
            name: "fill",
            type: "string",
          },
          {
            internalType: "string",
            name: "transform",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "stroke",
            type: "uint256",
          },
        ],
        internalType: "struct IAssetComposer.AssetLayer[]",
        name: "_layers",
        type: "tuple[]",
      },
    ],
    name: "registerComposition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAssetComposer__factory {
  static readonly abi = _abi;
  static createInterface(): IAssetComposerInterface {
    return new utils.Interface(_abi) as IAssetComposerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAssetComposer {
    return new Contract(address, _abi, signerOrProvider) as IAssetComposer;
  }
}
