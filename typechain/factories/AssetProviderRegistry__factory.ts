/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AssetProviderRegistry,
  AssetProviderRegistryInterface,
} from "../AssetProviderRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_providerId",
        type: "uint256",
      },
    ],
    name: "ProviderRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_providerId",
        type: "uint256",
      },
    ],
    name: "ProviderUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_providerId",
        type: "uint256",
      },
    ],
    name: "getProvider",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "contract IAssetProvider",
            name: "provider",
            type: "address",
          },
        ],
        internalType: "struct IAssetProvider.ProviderInfo",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_key",
        type: "string",
      },
    ],
    name: "getProviderId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "providerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAssetProvider",
        name: "_provider",
        type: "address",
      },
    ],
    name: "registerProvider",
    outputs: [
      {
        internalType: "uint256",
        name: "providerId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_providerId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setDisabledProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610de18061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063715018a6116100765780638da5cb5b1161005b5780638da5cb5b14610155578063f2fde38b1461017a578063f851a4401461018d57600080fd5b8063715018a61461014557806374c832681461014d57600080fd5b80634854078f116100a75780634854078f146100fe5780635c42d07914610111578063704b6c021461013257600080fd5b80630e260016146100c3578063475b77f9146100e9575b600080fd5b6100d66100d13660046109b4565b6101a0565b6040519081526020015b60405180910390f35b6100fc6100f7366004610b40565b6105b3565b005b6100d661010c3660046109ee565b610677565b61012461011f366004610b27565b6106f0565b6040516100e0929190610c3b565b6100fc6101403660046109b4565b6107d0565b6100fc610807565b6001546100d6565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e0565b6100fc6101883660046109b4565b61081b565b600554610162906001600160a01b031681565b600080826001600160a01b0316638c40188e6040518163ffffffff1660e01b815260040160006040518083038186803b1580156101dc57600080fd5b505afa1580156101f0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102189190810190610a69565b90506002816000015160405161022e9190610ba1565b908152602001604051809103902054915081600014610464578161025181610d38565b6000818152600360209081526040918290205482517f893d20e800000000000000000000000000000000000000000000000000000000815292519396506001600160a01b03169350839263893d20e8926004808201939291829003018186803b1580156102bd57600080fd5b505afa1580156102d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f591906109d1565b6001600160a01b0316846001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561033757600080fd5b505afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f91906109d1565b6001600160a01b0316146103f05760405162461bcd60e51b815260206004820152603260248201527f4173736574436f6d706f7365723a726567697374657250726f76696465722c2060448201527f616c72656164792072656769737465726564000000000000000000000000000060648201526084015b60405180910390fd5b600083815260036020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03881617905581513381529081018590527f4141f33bf490d9190a43ac8dc2fd923fdd3a01d78b82d1fa85f803a91f4bf4ae910160405180910390a1506105ad565b80604001516001600160a01b0316836001600160a01b0316146104ef5760405162461bcd60e51b815260206004820152603060248201527f4173736574436f6d706f7365723a726567697374657250726f76696465722c2060448201527f61646472657373206d69736d617463680000000000000000000000000000000060648201526084016103e7565b6001805484916003916000918261050583610d4f565b91905055815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600154600282600001516040516105529190610ba1565b90815260405190819003602001902055600180546105709190610cf1565b60408051338152602081018390529193507f90c9734131c1e4fb36cde2d71e6feb93fb258f71be8a85411c173d25e1516e80910160405180910390a15b50919050565b336105c66000546001600160a01b031690565b6001600160a01b031614806105e557506005546001600160a01b031633145b6106575760405162461bcd60e51b815260206004820152602660248201527f4173736574436f6d706f7365723a2063616c6c6572206973206e6f742074686560448201527f2061646d696e000000000000000000000000000000000000000000000000000060648201526084016103e7565b600091825260046020526040909120805460ff1916911515919091179055565b60008060028360405161068a9190610ba1565b908152602001604051809103902054905060008111836040516020016106b09190610bbd565b604051602081830303815290604052906106dd5760405162461bcd60e51b81526004016103e79190610c28565b506106e9600182610cf1565b9392505050565b604080516060808201835280825260208201526000918101919091526000828152600360205260408082205481517f8c40188e00000000000000000000000000000000000000000000000000000000815291516001600160a01b03909116918291638c40188e916004808201928792909190829003018186803b15801561077657600080fd5b505afa15801561078a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107b29190810190610a69565b60009485526004602052604090942054939460ff9094169392505050565b6107d86108ab565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61080f6108ab565b6108196000610905565b565b6108236108ab565b6001600160a01b03811661089f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103e7565b6108a881610905565b50565b6000546001600160a01b031633146108195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e7565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082601f83011261097357600080fd5b815161098661098182610cc9565b610c98565b81815284602083860101111561099b57600080fd5b6109ac826020830160208701610d08565b949350505050565b6000602082840312156109c657600080fd5b81356106e981610d96565b6000602082840312156109e357600080fd5b81516106e981610d96565b600060208284031215610a0057600080fd5b813567ffffffffffffffff811115610a1757600080fd5b8201601f81018413610a2857600080fd5b8035610a3661098182610cc9565b818152856020838501011115610a4b57600080fd5b81602084016020830137600091810160200191909152949350505050565b600060208284031215610a7b57600080fd5b815167ffffffffffffffff80821115610a9357600080fd5b9083019060608286031215610aa757600080fd5b604051606081018181108382111715610ac257610ac2610d80565b604052825182811115610ad457600080fd5b610ae087828601610962565b825250602083015182811115610af557600080fd5b610b0187828601610962565b60208301525060408301519250610b1783610d96565b6040810192909252509392505050565b600060208284031215610b3957600080fd5b5035919050565b60008060408385031215610b5357600080fd5b8235915060208301358015158114610b6a57600080fd5b809150509250929050565b60008151808452610b8d816020860160208601610d08565b601f01601f19169290920160200192915050565b60008251610bb3818460208701610d08565b9190910192915050565b7f417373657374436f6d706f7365723a67657450726f766964657249642c20746881527f652070726f766964657220646f6573206e6f742065786973743a000000000000602082015260008251610c1b81603a850160208701610d08565b91909101603a0192915050565b6020815260006106e96020830184610b75565b604081526000835160606040840152610c5760a0840182610b75565b90506020850151603f19848303016060850152610c748282610b75565b604096909601516001600160a01b0316608085015250505090151560209091015290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cc157610cc1610d80565b604052919050565b600067ffffffffffffffff821115610ce357610ce3610d80565b50601f01601f191660200190565b600082821015610d0357610d03610d6a565b500390565b60005b83811015610d23578181015183820152602001610d0b565b83811115610d32576000848401525b50505050565b600081610d4757610d47610d6a565b506000190190565b6000600019821415610d6357610d63610d6a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146108a857600080fdfea2646970667358221220a91241491f8b917bc3d9553292362e8bccb58efdae6ee18faaeeba20fc140bc964736f6c63430008060033";

export class AssetProviderRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssetProviderRegistry> {
    return super.deploy(overrides || {}) as Promise<AssetProviderRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AssetProviderRegistry {
    return super.attach(address) as AssetProviderRegistry;
  }
  connect(signer: Signer): AssetProviderRegistry__factory {
    return super.connect(signer) as AssetProviderRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetProviderRegistryInterface {
    return new utils.Interface(_abi) as AssetProviderRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetProviderRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetProviderRegistry;
  }
}
