/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IAssetStoreRegistry,
  IAssetStoreRegistryInterface,
} from "../IAssetStoreRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    name: "AssetRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "group",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "category",
        type: "string",
      },
    ],
    name: "CategoryAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "group",
        type: "string",
      },
    ],
    name: "GroupAdded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "group",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "minter",
            type: "string",
          },
          {
            internalType: "address",
            name: "soulbound",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "body",
                type: "bytes",
              },
              {
                internalType: "string",
                name: "color",
                type: "string",
              },
            ],
            internalType: "struct IAssetStoreRegistry.Part[]",
            name: "parts",
            type: "tuple[]",
          },
        ],
        internalType: "struct IAssetStoreRegistry.AssetInfo",
        name: "_assetInfo",
        type: "tuple",
      },
    ],
    name: "registerAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "group",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "minter",
            type: "string",
          },
          {
            internalType: "address",
            name: "soulbound",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "body",
                type: "bytes",
              },
              {
                internalType: "string",
                name: "color",
                type: "string",
              },
            ],
            internalType: "struct IAssetStoreRegistry.Part[]",
            name: "parts",
            type: "tuple[]",
          },
        ],
        internalType: "struct IAssetStoreRegistry.AssetInfo[]",
        name: "_assetInfos",
        type: "tuple[]",
      },
    ],
    name: "registerAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAssetStoreRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IAssetStoreRegistryInterface {
    return new utils.Interface(_abi) as IAssetStoreRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAssetStoreRegistry {
    return new Contract(address, _abi, signerOrProvider) as IAssetStoreRegistry;
  }
}
